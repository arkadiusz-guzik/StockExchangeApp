{"version":3,"sources":["./src/app/containers/homeContainers/header-home/header-home.component.ts","./src/app/containers/homeContainers/header-home/header-home.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/services/authorization.service.ts","./src/environments/environment.ts","./src/app/dialogs/homeDialogs/login-dialog/login-dialog.component.ts","./src/app/dialogs/homeDialogs/login-dialog/login-dialog.component.html","./src/app/pages/account/account.component.ts","./src/app/pages/account/account.component.html","./src/app/services/charts.service.ts","./src/app/alerts/account/wrong-transaction/wrong-transaction.component.ts","./src/app/alerts/account/wrong-transaction/wrong-transaction.component.html","./src/app/alerts/account/correct-transaction/correct-transaction.component.ts","./src/app/alerts/account/correct-transaction/correct-transaction.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/accountComponents/navbar-account/navbar-account.component.ts","./src/app/components/accountComponents/navbar-account/navbar-account.component.html","./src/app/containers/accountContainers/header-account/header-account.component.ts","./src/app/containers/accountContainers/header-account/header-account.component.html","./src/app/models/websocket-key.ts","./src/app/components/accountComponents/session-time/session-time.component.ts","./src/app/components/accountComponents/session-time/session-time.component.html","./src/app/dialogs/homeDialogs/registration-dialog/registration-dialog.component.ts","./src/app/dialogs/homeDialogs/registration-dialog/registration-dialog.component.html","./src/app/app.module.ts","./src/app/components/homeComponents/navbar-home/navbar-home.component.ts","./src/app/components/homeComponents/navbar-home/navbar-home.component.html","./src/app/components/accountComponents/account-balance/account-balance.component.ts","./src/app/components/accountComponents/account-balance/account-balance.component.html","./src/app/authorization/isAuthorized.ts","./src/app/dialogs/accountDialogs/session-dialog/session-dialog.component.ts","./src/app/dialogs/accountDialogs/session-dialog/session-dialog.component.html","./src/app/models/user-db.ts","./src/app/services/registration.service.ts","./src/app/app-routing.module.ts","./src/app/components/homeComponents/header-info/header-info.component.ts","./src/app/components/homeComponents/header-info/header-info.component.html","./src/app/models/base-url-service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CorrectTransactionComponent } from 'src/app/alerts/account/correct-transaction/correct-transaction.component';\n\n@Component({\n  selector: 'app-header-home',\n  templateUrl: './header-home.component.html',\n  styleUrls: ['./header-home.component.scss']\n})\nexport class HeaderHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"home-header\">\n   \n    <div id=\"header-left\">\n        <app-header-info></app-header-info>\n    </div>\n    \n    <div id=\"header-right\">\n        <app-navbar-home></app-navbar-home>\n        <div style=\"clear: both;\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header-home></app-header-home>\n","import { HttpClient, HttpParams  } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseUrlService } from '../models/base-url-service';\nimport { UserDb } from '../models/user-db';\nimport { UserDto } from '../models/user-dto';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService extends BaseUrlService{\n\n  public userSubject: BehaviorSubject<UserDto>;\n  public user: Observable<UserDto>;\n\n  constructor(private httpClient: HttpClient, private router: Router) {\n    super();\n    this.userSubject = new BehaviorSubject<UserDto>(JSON.parse(localStorage.getItem('user')));\n    this.user = this.userSubject.asObservable();\n  }\n\n  public get userValue(): UserDto {\n    return this.userSubject.value;\n  }\n\n  sendAuthorization(username:string, password:string){\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let theParams = new HttpParams().set(\"username\",username).set(\"password\", password);\n    return this.httpClient.post<UserDto>(this.baseUrl+'/authorization',headers, {params: theParams}).pipe(map(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n      return user;\n    }));\n\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.userSubject.next(null);\n    this.router.navigate(['/home']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { WrongTransactionComponent } from 'src/app/alerts/account/wrong-transaction/wrong-transaction.component';\nimport { UserDb } from 'src/app/models/user-db';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\nimport { RegistrationDialogComponent } from '../registration-dialog/registration-dialog.component';\n\n@Component({\n  selector: 'app-login-dialog',\n  templateUrl: './login-dialog.component.html',\n  styleUrls: ['./login-dialog.component.scss']\n})\nexport class LoginDialogComponent implements OnInit {\n\n  public loginFormGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private currentDialog:MatDialogRef<LoginDialogComponent>,\n    private dialog:MatDialog,\n    private authorizationService: AuthorizationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n    ) { }\n\n  ngOnInit(): void {\n    this.loginFormGroup = this.formBuilder.group({\n      login: this.formBuilder.group({\n       username:'',\n       password:''\n      })\n    });\n  }\n\n  onSubmit(){\n    this.authorizationService.sendAuthorization(this.loginFormGroup.get('login').value.username, this.loginFormGroup.get('login').value.password)\n    .pipe(first())\n    .subscribe({\n        next: (result) => {\n            if(result != null){\n              const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/account';\n              this.router.navigateByUrl(returnUrl);\n              this.currentDialog.close();\n            }else{\n              this.snackBar.openFromComponent(WrongTransactionComponent, {\n                duration: 2300,\n                data: {\n                  message: 'Incorrect username or password'\n                }\n              });\n            }\n            \n        }\n    });\n  }\n\n  closeDialog(){\n    this.currentDialog.close();\n  }\n\n  openRegistrationDialog(){\n    this.closeDialog();\n    this.dialog.open(RegistrationDialogComponent, { disableClose: true });\n  }\n\n}\n","<mat-icon id=\"icon\" aria-hidden=\"false\" aria-label=\"close icon\" (click)=\"closeDialog()\">close</mat-icon>\n<div id=\"title\">Sign In</div>\n<form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"onSubmit()\" id=\"form-box\">\n    <div formGroupName=\"login\">\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"on\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\" id=\"btn-submit-box\">\n            <button mat-button id=\"btn-submit\" type=\"submit\">Login</button>\n        </div>\n    </div>\n</form>    \n<hr>\n<div id=\"dialog-footer\">\n    <div id=\"text-footer\">Don't have an account?</div><div id=\"login-link\" (click)=\"openRegistrationDialog()\">Sign Up</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\nimport { StockListService } from 'src/app/services/stock-list.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { HttpClient} from '@angular/common/http';\nimport { Injectable} from '@angular/core';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { BaseUrlService } from '../models/base-url-service';\nimport { ChartData } from '../models/chart-data';\nimport { HistoryDb } from '../models/history-db';\nimport { WebsocketKey } from '../models/websocket-key';\n\nconst CHART_URL = \"https://finnhub.io/api/v1/stock/candle\";\nconst URL_KEY = WebsocketKey.TOKEN;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService extends BaseUrlService{\n \n  public stockIdSubject: BehaviorSubject<number>;\n  public userMoneySubject: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  constructor(private httpClient: HttpClient) {\n    super();\n    this.stockIdSubject = new BehaviorSubject<number>(0);\n  }\n\n  public get stockId(): number {\n    return this.stockIdSubject.value;\n  }\n\n \n\n  setStockId(id:number){\n    this.stockIdSubject.next(id);\n  }\n\n  getChartData(symbol: string, resolution: string):Observable<ChartData>{\n    let toDate = Math.round(new Date().getTime()/1000);\n    \n    let date = new Date();\n\n    switch(resolution){\n      case '1':\n        date.setHours(date.getHours()-5);\n        break;\n      case '5':\n        date.setDate(date.getDate()-1);\n        break;\n      case '15':\n        date.setDate(date.getDate()-3);\n        break;\n      case '30':\n        date.setDate(date.getDate()-8);\n        break;\n      case '60':\n        date.setMonth(date.getMonth()-1);\n        break;\n      case 'D':\n        date.setMonth(date.getMonth()-5);\n        break;\n      case 'W':\n        date.setMonth(date.getMonth()-10);\n        break;\n    }\n\n    \n    let fromDate = Math.round(date.getTime()/1000);\n    return this.httpClient.get<ChartData>(CHART_URL+\"?symbol=\"+symbol+\"&resolution=\"+resolution+\"&from=\"+fromDate+\"&to=\"+toDate+\"&token=\"+URL_KEY);\n  }\n\n  purchaseTransaction(historyDb: HistoryDb, token:string){\n    const headers = { 'Authorization': token};\n    this.httpClient.post(this.baseUrl+'/purchaseTransaction', historyDb, {headers}).subscribe();\n  }\n  \n  saleTransaction(historyDb: HistoryDb, token:string) {\n    const headers = { 'Authorization': token};\n    this.httpClient.post(this.baseUrl+'/saleTransaction', historyDb, {headers}).subscribe();\n  }\n\n  getLastPrice(name:string):Observable<ChartData>{\n    let date = new Date();\n    \n    date.setDate(date.getDate()-2);\n    \n    let toDate = Math.round(new Date().getTime()/1000);\n    let fromDate = Math.round(date.getTime()/1000);\n\n    return this.httpClient.get<ChartData>(CHART_URL+\"?symbol=\"+name+\"&resolution=D&from=\"+fromDate+\"&to=\"+toDate+\"&token=\"+URL_KEY);\n   }\n\n  updatePrice(userId: number, token:string){\n    const headers = { 'Authorization': token};\n    return this.httpClient.get<number>(this.baseUrl+'/getMoney/'+userId,{headers}).subscribe(money => this.userMoneySubject.next(money));\n  }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-wrong-transaction',\n  templateUrl: './wrong-transaction.component.html',\n  styleUrls: ['./wrong-transaction.component.scss']\n})\nexport class WrongTransactionComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"message-box\">\n    {{data.message}}\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-correct-transaction',\n  templateUrl: './correct-transaction.component.html',\n  styleUrls: ['./correct-transaction.component.scss']\n})\nexport class CorrectTransactionComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"message-box\">\n    {{data.message}}\n</div>","import { Component } from '@angular/core';\nimport { UserDb } from './models/user-db';\nimport { UserDto } from './models/user-dto';\nimport { AuthorizationService } from './services/authorization.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'StockExchangeApp';\n  user: UserDto;\n\n  constructor(private authorizationService: AuthorizationService){\n    this.authorizationService.user.subscribe(res => this.user = res);\n  }\n}\n","<div *ngIf=\"user\">\n    <app-header-account></app-header-account>\n</div>\n<div><router-outlet></router-outlet></div>","import { Component, OnInit, PipeTransform } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\n\n@Component({\n  selector: 'app-navbar-account',\n  templateUrl: './navbar-account.component.html',\n  styleUrls: ['./navbar-account.component.scss']\n})\nexport class NavbarAccountComponent implements OnInit{\n  private urlInfo:string;\n  userName:string;\n  \n\n  constructor(private authorizationService: AuthorizationService) {\n    this.userName = authorizationService.userValue.username;\n   }\n\n  ngOnInit(): void {\n  }\n\n  change(url):void{\n    this.urlInfo=url;\n  }\n\n  clear(url):boolean{\n    return url===this.urlInfo;\n  }\n\n  logout(){\n    this.authorizationService.logout();\n  }\n\n  \n}\n","<nav>\n    <ul>\n        <li>\n            <a class=\"nav-item\" \n                routerLink=\"/account/portfolio\" \n                routerLinkActive=\"active\"\n                (click)=\"change('/account/portfolio')\"\n                [ngClass]=\"{'btn-color': clear('/account/portfolio')}\"\n                >Portfolio</a>\n        </li>\n        <li>\n            <a class=\"nav-item\" \n                routerLink=\"/account/charts\"\n                routerLinkActive=\"active\"\n                (click)=\"change('/account/charts')\"\n                [ngClass]=\"{'btn-color': clear('/account/charts')}\">Charts</a>\n        </li>\n        <li>\n            <a class=\"nav-item\" \n                routerLink=\"/account/history\"\n                routerLinkActive=\"active\"\n                (click)=\"change('/account/history')\"\n                [ngClass]=\"{'btn-color': clear('/account/history')}\">History</a>\n        </li>\n        <li>\n            <button id=\"wrap-btn\"mat-button [matMenuTriggerFor]=\"beforeMenu\">Hi {{userName}}! \n                <mat-icon id=\"wrap-icon\" aria-hidden=\"false\" aria-label=\"Example home icon\">keyboard_arrow_down</mat-icon>\n            </button>\n            <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n                <button mat-menu-item (click)=\"logout()\">Logout</button>\n            </mat-menu>\n        </li>\n    </ul>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-account',\n  templateUrl: './header-account.component.html',\n  styleUrls: ['./header-account.component.scss']\n})\nexport class HeaderAccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"header-account-container\">\n    <app-account-balance></app-account-balance>\n    <app-navbar-account></app-navbar-account>\n    <app-session-time></app-session-time>\n    <div style=\"clear: both;\"></div>\n</div>","export class WebsocketKey {\n    static readonly TOKEN:string = \"YOUR TOKEN\";\n}\n","import { OnChanges, PipeTransform, SimpleChanges } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BehaviorSubject, Observable, Subscription, timer } from 'rxjs';\nimport { SessionDialogComponent } from 'src/app/dialogs/accountDialogs/session-dialog/session-dialog.component';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\n\n@Component({\n  selector: 'app-session-time',\n  templateUrl: './session-time.component.html',\n  styleUrls: ['./session-time.component.scss']\n})\nexport class SessionTimeComponent implements OnInit, PipeTransform  {\n\n  source:Subscription;\n  dialogSub:Subscription;\n  timeLeft: number;\n  subscribeTimer = new BehaviorSubject<string>(\"\");\n  expirationTime: number = 0;\n  constructor(public authorizationService:AuthorizationService, private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.expirationTime = this.authorizationService.userValue.expirationTime;\n    let expirationDate = new Date(this.expirationTime);\n    let currentTime = new Date();\n    this.timeLeft = Math.floor((expirationDate.getTime()-currentTime.getTime())/1000);\n    this.observableTimer();\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    const seconds: number = value - minutes * 60;\n    let time;\n    if(minutes<10){\n      time = \"0\"+minutes;\n    }else{\n      time = minutes;\n    }\n    if(seconds<10){\n      time = time+\":0\"+seconds;\n    }else{\n      time = time+\":\"+seconds;\n    }\n    \n    return time;\n }\n  \n  observableTimer(){\n    let time:string;\n    this.source = timer(0,1000).subscribe(val=>{\n      time = this.transform(this.timeLeft - val);\n      this.subscribeTimer.next(time);\n      switch(time){\n        case \"01:00\":\n          this.dialog.open(SessionDialogComponent , { disableClose: true });\n          this.dialogSub = this.dialog.afterAllClosed.subscribe(res => {\n              this.dialogSub.unsubscribe();\n              this.source.unsubscribe();\n              if(this.authorizationService.userValue != null){\n                this.ngOnInit();\n              }else{\n                this.authorizationService.logout();\n              }\n            })\n          break;\n        case \"00:00\":\n          this.source.unsubscribe();\n          this.dialog.closeAll();\n          this.authorizationService.logout();\n          break;\n      }\n    })\n  }\n}\n","<div>Time to end of session: {{ subscribeTimer.value}}</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CorrectTransactionComponent } from 'src/app/alerts/account/correct-transaction/correct-transaction.component';\nimport { WrongTransactionComponent } from 'src/app/alerts/account/wrong-transaction/wrong-transaction.component';\nimport { UserDb } from 'src/app/models/user-db';\nimport { RegistrationService } from 'src/app/services/registration.service';\nimport { LoginDialogComponent } from '../login-dialog/login-dialog.component';\n\n@Component({\n  selector: 'app-registration-dialog',\n  templateUrl: './registration-dialog.component.html',\n  styleUrls: ['./registration-dialog.component.scss']\n})\nexport class RegistrationDialogComponent implements OnInit {\n\n  public registrationFormGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private currentDialog:MatDialogRef<RegistrationDialogComponent>,\n              private dialog:MatDialog,\n              private registraionService: RegistrationService,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.registrationFormGroup = this.formBuilder.group({\n      registration: this.formBuilder.group({\n       username:'',\n       email:'',\n       password:'',\n       confirmPassword:''\n      })\n    });\n  }\n\n  onSubmit(){\n    let component;\n    let messageAlert;\n    let newUser = new UserDb(this.username, this.password, this.email);\n    if(this.password === this.confirmPassword){\n      this.registraionService.sendRegistration(newUser)\n      .pipe(first())\n      .subscribe({\n          next: (result) => {\n              \n              if(result == true){\n                component = CorrectTransactionComponent;\n                messageAlert = \"Successfully registered!\";\n                this.currentDialog.close();\n              }else{\n                component = WrongTransactionComponent;\n                messageAlert = \"Your username is used! Please enter another.\";\n              }\n              this.executeDailogAnswer(component, messageAlert);\n          }\n          \n      });\n    }else{\n      component = WrongTransactionComponent;\n      messageAlert = \"Check your password!\";\n      this.executeDailogAnswer(component, messageAlert);\n    }\n  }\n\n  executeDailogAnswer(component, messageAlert){\n    this.snackBar.openFromComponent(component, {\n      duration: 2300,\n      data: {\n        message: messageAlert\n      }\n    });\n  }\n\n  closeDialog(){\n    this.currentDialog.close();\n  }\n\n  openLoginDialog(){\n    this.closeDialog();\n    this.dialog.open(LoginDialogComponent);\n  }\n\n  get username(){ return this.registrationFormGroup.get('registration').value.username; }\n  get password(){ return this.registrationFormGroup.get('registration').value.password; }\n  get confirmPassword(){ return this.registrationFormGroup.get('registration').value.confirmPassword; }\n  get email(){ return this.registrationFormGroup.get('registration').value.email; }\n}\n","<mat-icon id=\"icon\" aria-hidden=\"false\" aria-label=\"close icon\" (click)=\"closeDialog()\">close</mat-icon>\n<div id=\"title\">Sign Up</div>\n<form [formGroup]=\"registrationFormGroup\" (ngSubmit)=\"onSubmit()\" id=\"form-box\">\n    <div formGroupName=\"registration\">\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Email</mat-label>\n                <input matInput type=\"text\" formControlName=\"email\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"on\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\">\n            <mat-form-field class=\"input-field\">\n                <mat-label>Confirm password</mat-label>\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" autocomplete=\"on\">\n            </mat-form-field>\n        </div>\n        <div class=\"registration-box\" id=\"btn-submit-box\">\n            <button mat-button id=\"btn-submit\" type=\"submit\">Join us</button>\n        </div>\n    </div>\n</form>    \n<hr>\n<div id=\"dialog-footer\">\n    <div id=\"text-footer\">Do you have an account?</div><div id=\"login-link\" (click)=\"openLoginDialog()\">Sign In</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AccountComponent } from './pages/account/account.component';\nimport { HeaderAccountComponent } from './containers/accountContainers/header-account/header-account.component';\nimport { NavbarAccountComponent } from './components/accountComponents/navbar-account/navbar-account.component';\nimport { HeaderHomeComponent } from './containers/homeContainers/header-home/header-home.component';\nimport { AccountBalanceComponent } from './components/accountComponents/account-balance/account-balance.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginDialogComponent } from './dialogs/homeDialogs/login-dialog/login-dialog.component';\nimport { RegistrationDialogComponent } from './dialogs/homeDialogs/registration-dialog/registration-dialog.component';\nimport { HeaderInfoComponent } from './components/homeComponents/header-info/header-info.component';\nimport { NavbarHomeComponent } from './components/homeComponents/navbar-home/navbar-home.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SessionTimeComponent } from './components/accountComponents/session-time/session-time.component';\nimport { SessionDialogComponent } from './dialogs/accountDialogs/session-dialog/session-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AccountComponent,\n    HeaderHomeComponent,\n    HeaderAccountComponent,\n    AccountBalanceComponent,\n    NavbarAccountComponent,\n    LoginDialogComponent,\n    RegistrationDialogComponent,\n    HeaderInfoComponent,\n    NavbarHomeComponent,\n    SessionTimeComponent,\n    SessionDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSnackBarModule,\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SessionDialogComponent } from 'src/app/dialogs/accountDialogs/session-dialog/session-dialog.component';\nimport { LoginDialogComponent } from 'src/app/dialogs/homeDialogs/login-dialog/login-dialog.component';\nimport { RegistrationDialogComponent } from 'src/app/dialogs/homeDialogs/registration-dialog/registration-dialog.component';\n\n@Component({\n  selector: 'app-navbar-home',\n  templateUrl: './navbar-home.component.html',\n  styleUrls: ['./navbar-home.component.scss']\n})\nexport class NavbarHomeComponent implements OnInit {\n\n  constructor(private router: Router,private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    if(this.router.url != \"/home\"){\n      this.dialog.open(LoginDialogComponent);\n    }\n  }\n\n  openLoginDialog(){\n    this.dialog.open(LoginDialogComponent, { disableClose: true });\n \n  }\n\n  openRegistrationDialog(){\n    this.dialog.open(RegistrationDialogComponent, { disableClose: true });\n  }\n}\n","<div id=\"nav-box\">\n    <div class=\"nav-item\">Contact</div>\n    <div class=\"nav-item\">More info</div>\n    <button mat-button id=\"btn-registration\" (click)=\"openRegistrationDialog()\">Create a account</button>\n    <button mat-button id=\"btn-login\" (click)=\"openLoginDialog()\">Login</button>\n</div>","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\nimport { ChartsService } from 'src/app/services/charts.service';\n\n@Component({\n  selector: 'app-account-balance',\n  templateUrl: './account-balance.component.html',\n  styleUrls: ['./account-balance.component.scss']\n})\nexport class AccountBalanceComponent{\n\n  constructor(private authorizationService: AuthorizationService, public chartsService: ChartsService) {\n    this.chartsService.updatePrice(this.authorizationService.userValue.user_id, this.authorizationService.userValue.token);\n  }\n\n}\n","<div id=\"account-balance\">Account balance: {{this.chartsService.userMoneySubject.value | currency: 'USD'}}</div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class isAuthorized implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private autorizationService: AuthorizationService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.autorizationService.userValue;\r\n\r\n        if (user) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/home/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Component, ComponentRef, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SessionTimeComponent } from 'src/app/components/accountComponents/session-time/session-time.component';\nimport { HeaderAccountComponent } from 'src/app/containers/accountContainers/header-account/header-account.component';\nimport { UserDto } from 'src/app/models/user-dto';\nimport { AuthorizationService } from 'src/app/services/authorization.service';\n\n@Component({\n  selector: 'app-session-dialog',\n  templateUrl: './session-dialog.component.html',\n  styleUrls: ['./session-dialog.component.scss']\n})\nexport class SessionDialogComponent implements OnInit {\n\n  authenticationFormGroup: FormGroup;\n\n  constructor(\n    private currentDialog:MatDialogRef<SessionDialogComponent>,\n    private authorizationService: AuthorizationService,\n    private formBuilder: FormBuilder\n    ){\n    \n  }\n\n  ngOnInit(): void {\n    this.authenticationFormGroup = this.formBuilder.group({\n      confirmPassword: this.formBuilder.group({\n       password:''\n      })\n    });\n  }\n\n  refreshToken(){\n    if(this.authorizationService.userValue != null){\n      this.authorizationService.sendAuthorization(this.authorizationService.userValue.username, this.authenticationFormGroup.get('confirmPassword').value.password).toPromise().then(res => this.currentDialog.close());\n    }\n  }\n\n  closeDialog(){\n    this.authorizationService.userSubject.next(null);\n    this.currentDialog.close()\n  }\n\n}\n","\n<mat-icon id=\"icon\" aria-hidden=\"false\" aria-label=\"close icon\" (click)=\"closeDialog()\">close</mat-icon>\n<div id=\"dialog-content\">\n    <div id=\"question\">Do you want extend the session?</div>\n\n    <form [formGroup]=\"authenticationFormGroup\" (ngSubmit)=\"refreshToken()\" id=\"form-box\">\n        <div formGroupName=\"confirmPassword\">\n            <div id=\"filed-box\">\n                <div id=\"message\">Confirm your password:</div>\n                <mat-form-field id=\"password-field\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\"  autocomplete=\"on\">\n                </mat-form-field>\n            </div>\n            <div id=\"btn-submit-box\">\n                <button mat-button id=\"submit-btn\" type=\"submit\">Yes, refresh a token</button>\n                <button mat-button id=\"close-btn\" (click)=\"closeDialog()\">No, log out of the account</button>\n            </div>\n        </div>\n    </form> \n</div>   \n\n","export class UserDb {\n    \n    public userId: number;\n    public username: string;\n    private password: string;\n    private email: string;\n    public money: number;\n\n\n    constructor(username?:string, password?: string, email?: string){\n        this.userId = 0;\n        this.username = username || '';\n        this.password = password || '';\n        \n    }\n\n    public get getUserId(){\n        return this.userId;\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseUrlService } from '../models/base-url-service';\nimport { UserDb } from '../models/user-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService extends BaseUrlService {\n\n  private resultSubject: BehaviorSubject<boolean>;\n  private result: Observable<boolean>;\n\n  constructor(private httpClient: HttpClient) {\n    super();\n    this.resultSubject = new BehaviorSubject<boolean>(JSON.parse(localStorage.getItem('result')));\n    this.result = this.resultSubject.asObservable();\n  }\n\n  public get resultValue(): boolean {\n    return this.resultSubject.value;\n  }\n\n  sendRegistration(newUser:UserDb){\n     return this.httpClient.post<boolean>(this.baseUrl+'/registration', newUser).pipe(map(result => {\n      this.resultSubject.next(result);\n      return result;\n    }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { isAuthorized } from './authorization/isAuthorized';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst accountModule = () => import('./pages/account/account.module').then(x => x.AccountModule)\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent},\n  { path: 'home/login', component: HomeComponent, },\n  { path: 'account', loadChildren: accountModule, canActivate:[isAuthorized] },\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RegistrationDialogComponent } from 'src/app/dialogs/homeDialogs/registration-dialog/registration-dialog.component';\n\n@Component({\n  selector: 'app-header-info',\n  templateUrl: './header-info.component.html',\n  styleUrls: ['./header-info.component.scss']\n})\nexport class HeaderInfoComponent implements OnInit {\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openRegistrationDialog(){\n    this.dialog.open(RegistrationDialogComponent);\n  }\n}\n","<div id=\"head-info\">\n    <div id=\"title\">Invest and multiply your money!</div>\n    <div id=\"text\">Thanks to us you will see how a real stock exchange works. Moreover you will get 10000$ for free.</div>\n    <button mat-button id=\"btn-join\" (click)=\"openRegistrationDialog()\">JOIN US FOR FREE</button>\n    <button mat-button id=\"btn-info\">MORE INFORMATION</button>\n</div>\n\n","export class BaseUrlService {\n    public baseUrl;\n\n    constructor(){\n        this.baseUrl = 'http://localhost:8080';\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}